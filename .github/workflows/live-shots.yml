name: live-shots

on:
  workflow_dispatch:
  schedule:
    - cron: "13 */3 * * *"   # every 3 hours (good signal, not noisy)

permissions:
  contents: write

concurrency:
  group: live-shots
  cancel-in-progress: false

jobs:
  shot:
    runs-on: ubuntu-latest

    env:
      RUNS: "3"
      TEMPERATURE: "0.9"
      THRESHOLD: "0.85"
      PROMPT: "Explain the purpose of AnomalyScope in one concise sentence."

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          pip install -e .

      - name: Jitter (0–900s) to avoid top-of-hour spikes
        run: |
          SLEEP=$(( RANDOM % 900 ))
          echo "Sleeping $SLEEP seconds…"
          sleep $SLEEP

      # Decide providers using presence of env secrets inside shell (no secrets in 'if:' expressions)
      - name: Pick providers dynamically
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          PROV=""
          if [ -n "$OPENAI_API_KEY" ]; then PROV="openai"; fi
          if [ -n "$ANTHROPIC_API_KEY" ]; then
            if [ -n "$PROV" ]; then PROV="$PROV,anthropic"; else PROV="anthropic"; fi
          fi
          echo "Chosen providers: $PROV"
          echo "PROVIDERS=$PROV" >> $GITHUB_ENV

      - name: Fire cross-provider live shot (only if we have a provider)
        # 'env' context is allowed in expressions; we avoid 'secrets' here
        if: env.PROVIDERS != ''
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          python -m anomaly_scanner.cross_probe \
            --providers "${{ env.PROVIDERS }}" \
            --runs "${{ env.RUNS }}" \
            --temperature "${{ env.TEMPERATURE }}" \
            --threshold "${{ env.THRESHOLD }}" \
            --prompt "${{ env.PROMPT }}"

      - name: Refresh homepage index
        if: env.PROVIDERS != ''
        run: |
          python scripts/update_index.py || true

      - name: Commit & push artifacts
        if: env.PROVIDERS != ''
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add docs/index.md docs/LATEST_ANOMALY.md docs/anomalies || true
          git commit -m "ci: publish live anomaly and update homepage [skip ci]" || echo "nothing to commit"
          git push || true
